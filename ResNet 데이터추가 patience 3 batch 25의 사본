{"cells":[{"cell_type":"markdown","source":["#Import Packages"],"metadata":{"id":"74AGMkEba-Lc"}},{"cell_type":"code","execution_count":5,"metadata":{"id":"apiAMzP2LkZI","executionInfo":{"status":"ok","timestamp":1654339883165,"user_tz":-540,"elapsed":289,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}}},"outputs":[],"source":["# import data processing and visualisation libraries\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","\n","# import image processing libraries\n","import cv2\n","import skimage\n","from skimage.transform import resize\n","\n","# import tensorflow and keras\n","import tensorflow as tf\n","from tensorflow import keras\n","import os"]},{"cell_type":"markdown","source":["#Load Data"],"metadata":{"id":"fFXfviASbTKp"}},{"cell_type":"code","execution_count":6,"metadata":{"executionInfo":{"elapsed":3,"status":"ok","timestamp":1654339883446,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"},"user_tz":-540},"id":"4x6R6X5vLlzp"},"outputs":[],"source":["#기본 Parameter 설정\n","BATCHSIZE = 25 #batch size의 변화\n","imageSize = 60\n","target_dims = (imageSize, imageSize, 3)\n","num_classes = 11 #0~10까지 총 11개\n","train_len = 1534 #총 파일 수\n","\n","train_dir = \"./input/train/\" #train 폴더 경로 지정(끝에 / 까지 쳐야함)"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"MqNJ6XRPP289","executionInfo":{"status":"ok","timestamp":1654339883806,"user_tz":-540,"elapsed":363,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}}},"outputs":[],"source":["from tqdm import tqdm #진행상황바 표시해주는 패키지\n","\n","def get_data(folder, data_len): #data불러오는 함수\n","    \n","    X = np.empty((data_len, imageSize, imageSize, 3), dtype=np.float32)\n","    y = np.empty((data_len,), dtype=np.int)\n","    cnt = 0\n","\n","    for folderName in os.listdir(folder): #기존 ASL alphabet용 코드를 약간 변형시켜줌\n","        if not folderName.startswith('.'):\n","            if folderName in ['00']: #label이 0부터 시작하게 하려고 0 사진 다운 받아둠\n","                label = 0\n","            elif folderName in ['01']:\n","                label = 1\n","            elif folderName in ['02']:\n","                label = 2\n","            elif folderName in ['03']:\n","                label = 3\n","            elif folderName in ['04']:\n","                label = 4\n","            elif folderName in ['05']:\n","                label = 5\n","            elif folderName in ['06']:\n","                label = 6\n","            elif folderName in ['07']:\n","                label = 7\n","            elif folderName in ['08']:\n","                label = 8\n","            elif folderName in ['09']:\n","                label = 9\n","            elif folderName in ['10']:\n","                label = 10\n","            for image_filename in tqdm(os.listdir(folder + folderName)):\n","              img_file = cv2.imread(folder + folderName + '/' + image_filename)\n","              if img_file is not None:\n","                img_file = skimage.transform.resize(img_file, (imageSize, imageSize, 3)) #image 사이즈 조정\n","                img_arr = np.asarray(img_file)\n","                \n","                X[cnt] = img_arr\n","                y[cnt] = label\n","                cnt += 1\n","\n","    return X,y"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"NQNaq3esQXpF","executionInfo":{"status":"ok","timestamp":1654339885593,"user_tz":-540,"elapsed":1790,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}}},"outputs":[],"source":["#pickle 파일 load\n","import pickle\n","\n","with open(\"/content/drive/MyDrive/대학원 1학기/컴퓨터 비전과 딥러닝/컴퓨터비전과 딥러닝 프로젝트/pickle/X_train_220602_imagesize_60_full\",\"rb\") as file :\n","    X_train=pickle.load(file)\n","    \n","with open(\"/content/drive/MyDrive/대학원 1학기/컴퓨터 비전과 딥러닝/컴퓨터비전과 딥러닝 프로젝트/pickle/y_train_220602_imagesize_60_full\",\"rb\") as file2 :\n","    y_train=pickle.load(file2)"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1654339885593,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"},"user_tz":-540},"id":"EiLhaUktJc5J","outputId":"ae091784-08e6-47fe-8f3e-ec007d1a724a"},"outputs":[{"output_type":"stream","name":"stdout","text":["The shape of X_train is :  (1534, 60, 60, 3)\n","The shape of y_train is :  (1534,)\n","The shape of one image is :  (60, 60, 3)\n"]}],"source":["#data 불러온 결과 shape출력(데이터수, imageSize, imageSize, 3) : get_data함수에서 설정해준 항목\n","print(\"The shape of X_train is : \", X_train.shape)\n","print(\"The shape of y_train is : \", y_train.shape)\n","print(\"The shape of one image is : \", X_train[0].shape)"]},{"cell_type":"code","execution_count":10,"metadata":{"id":"08cpQZyTaZ9V","executionInfo":{"status":"ok","timestamp":1654339886161,"user_tz":-540,"elapsed":572,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}},"colab":{"base_uri":"https://localhost:8080/","height":268},"outputId":"0f78784c-2048-4ebb-da80-275a2bd4b073"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["#예시로 이미지 출력\n","plt.imshow(X_train[0])\n","plt.show()"]},{"cell_type":"code","execution_count":11,"metadata":{"id":"j7ZLyYrUahAy","executionInfo":{"status":"ok","timestamp":1654339886161,"user_tz":-540,"elapsed":8,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}}},"outputs":[],"source":["#Making copies of original data\n","X_data = X_train\n","y_data = y_train"]},{"cell_type":"code","execution_count":12,"metadata":{"id":"q778mDkrtXe5","executionInfo":{"status":"ok","timestamp":1654339886551,"user_tz":-540,"elapsed":397,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}}},"outputs":[],"source":["#있는 데이터로 train, test split해주는 함수, test_size에서 비율 조정 가능\n","from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X_data, y_data, test_size=0.3,random_state=42, stratify=y_data)"]},{"cell_type":"code","execution_count":13,"metadata":{"id":"bRQKIKvStX8K","executionInfo":{"status":"ok","timestamp":1654339886552,"user_tz":-540,"elapsed":18,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"3e6dd7e3-5537-4767-b9d7-a8434fa5efcf"},"outputs":[{"output_type":"stream","name":"stdout","text":["(1073, 60, 60, 3)\n","(1073,)\n","(461, 60, 60, 3)\n","(461,)\n"]}],"source":["#train,test split된 것 출력해서 확인\n","print(X_train.shape)\n","print(y_train.shape)\n","print(X_test.shape)\n","print(y_test.shape)"]},{"cell_type":"markdown","source":["#Modeling"],"metadata":{"id":"w2Q6pEn6bkWU"}},{"cell_type":"code","execution_count":14,"metadata":{"id":"v62fXCWytZkd","executionInfo":{"status":"ok","timestamp":1654339886553,"user_tz":-540,"elapsed":16,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"a2cd91a8-0356-47c2-d4d3-a3e377df51fc"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/keras/backend.py:450: UserWarning: `tf.keras.backend.set_learning_phase` is deprecated and will be removed after 2020-10-11. To update it, simply pass a True/False value to the `training` argument of the `__call__` method of your layer or model.\n","  warnings.warn('`tf.keras.backend.set_learning_phase` is deprecated and '\n"]}],"source":["import numpy as np\n","from keras import layers\n","from keras.layers import Input, Add, Dense, Activation, ZeroPadding2D, BatchNormalization, Flatten, Conv2D, AveragePooling2D, MaxPooling2D, GlobalMaxPooling2D\n","from keras.models import Model, load_model\n","from keras.preprocessing import image\n","from keras.utils import layer_utils\n","from keras.utils.data_utils import get_file\n","from keras.applications.imagenet_utils import preprocess_input\n","import pydot\n","from IPython.display import SVG\n","from keras.utils.vis_utils import model_to_dot\n","from keras.initializers import glorot_uniform\n","import scipy.misc\n","import matplotlib.pyplot as plt\n","from matplotlib.pyplot import imshow\n","%matplotlib inline\n","\n","import keras.backend as K\n","K.set_image_data_format('channels_last')\n","K.set_learning_phase(1)"]},{"cell_type":"code","source":["#Early Stopping함수를 이용해서 patience수가 넘어가면 자동으로 Early Stopping되게 함\n","from tensorflow.keras.callbacks import EarlyStopping\n","early_stop = EarlyStopping(monitor='val_loss',patience=5)"],"metadata":{"id":"7RkdFqI9Ebbp","executionInfo":{"status":"ok","timestamp":1654339886554,"user_tz":-540,"elapsed":12,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","execution_count":16,"metadata":{"id":"pPlenkiHtbq2","executionInfo":{"status":"ok","timestamp":1654339886556,"user_tz":-540,"elapsed":13,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}}},"outputs":[],"source":["def identity_block(X, f, filters):\n","    \"\"\"\n","    Arguments:\n","    X -- input shape (m, n_H_prev, n_W_prev, n_C_prev)\n","    f -- shape of the middle CONV's window for the main path\n","    filters -- number of filters in the CONV layers of the main path\n","    Returns:\n","    X -- output of shape (n_H, n_W, n_C)\n","    \"\"\"\n","    \n","    # Filters\n","    F1, F2, F3 = filters\n","    \n","    # Save the input value. \n","    X_shortcut = X\n","    \n","    # First component\n","    X = Conv2D(filters = F1, kernel_size =(1,1), strides = (1,1), padding = 'valid', kernel_initializer = glorot_uniform(seed=0))(X)\n","    X = BatchNormalization(axis = 3)(X)\n","    X = Activation('relu')(X)\n","    \n","    # Second component\n","    X = Conv2D(filters= F2, kernel_size=(f,f), strides=(1,1),padding='same',kernel_initializer = glorot_uniform(seed=0))(X)\n","    X = BatchNormalization(axis=3)(X)\n","    X = Activation('relu')(X)\n","\n","    # Third component\n","    X = Conv2D(filters=F3,kernel_size=(1,1),strides=(1,1),padding='valid',kernel_initializer=glorot_uniform(seed=0))(X)\n","    X = BatchNormalization(axis=3)(X)\n","\n","    # Final step\n","    X = Add()([X, X_shortcut])\n","    X = Activation('relu')(X)\n","    \n","    return X"]},{"cell_type":"code","execution_count":17,"metadata":{"id":"xJ4LqindtdXz","executionInfo":{"status":"ok","timestamp":1654339886557,"user_tz":-540,"elapsed":13,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}}},"outputs":[],"source":["def convolutional_block(X, f, filters,s = 2):\n","    \"\"\"\n","    X -- input shape (m, n_H_prev, n_W_prev, n_C_prev)\n","    f -- shape of the middle CONV's window for the main path\n","    filters --number of filters\n","    s -- stride\n","    Returns:\n","    X -- output of the convolutional block shape (n_H, n_W, n_C)\n","    \"\"\"\n","    #Filters\n","    F1, F2, F3 = filters\n","    \n","    # Save the input value\n","    X_shortcut = X\n","    # First component\n","    X = Conv2D(F1, (1,1), strides = (s,s), padding='valid', kernel_initializer = glorot_uniform(seed=0))(X)\n","    X = BatchNormalization(axis = 3)(X)\n","    X = Activation('relu')(X)\n","    # Second component\n","    X = Conv2D(F2, (f,f), strides = (1,1),padding='same',kernel_initializer = glorot_uniform(seed=0))(X)\n","    X = BatchNormalization(axis = 3)(X)\n","    X = Activation('relu')(X)\n","\n","    # Third component\n","    X = Conv2D(F3, (1,1), strides = (1,1), padding='valid', kernel_initializer = glorot_uniform(seed=0))(X)\n","    X = BatchNormalization(axis = 3)(X)\n","\n","    #SHORTCUT PATH\n","    X_shortcut = Conv2D(F3, (1,1),strides = (s,s),padding='valid', kernel_initializer = glorot_uniform(seed=0))(X_shortcut)\n","    X_shortcut = BatchNormalization(axis =3)(X_shortcut)\n","\n","    # Final step\n","    X = Add()([X,X_shortcut])\n","    X = Activation('relu')(X)  \n","    return X"]},{"cell_type":"code","execution_count":18,"metadata":{"id":"1URMyrJ8tewG","executionInfo":{"status":"ok","timestamp":1654339886557,"user_tz":-540,"elapsed":13,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}}},"outputs":[],"source":["def ResNet50(input_shape = (60, 60, 3), classes = 11):\n","    \"\"\"\n","    input_shape -- shape of the images of the dataset\n","    classes -- integer, number of classes\n","\n","    Returns:\n","    model\n","    \"\"\"\n","    \n","    # Define the input with shape input_shape\n","    X_input = Input(input_shape)\n","\n","    \n","    # Zero-Padding\n","    X = ZeroPadding2D((3, 3))(X_input)\n","    \n","    # Stage 1\n","    X = Conv2D(64, (7, 7), strides = (2, 2), name = 'conv1', kernel_initializer = glorot_uniform(seed=0))(X)\n","    X = BatchNormalization(axis = 3, name = 'bn_conv1')(X)\n","    X = Activation('relu')(X)\n","    X = MaxPooling2D((3, 3), strides=(2, 2))(X)\n","\n","    # Stage 2\n","    X = convolutional_block(X, f = 3, filters = [64, 64, 256],s = 1)\n","    X = identity_block(X, 3, [64, 64, 256])\n","    X = identity_block(X, 3, [64, 64, 256])\n","\n","    # Stage 3\n","    X = convolutional_block(X,f=3,filters=[128,128,512],s=2)\n","    X = identity_block(X,3,[128,128,512])\n","    X = identity_block(X,3,[128,128,512])\n","    X = identity_block(X,3,[128,128,512])\n","    \n","    # Stage 4\n","    X = convolutional_block(X,f=3,filters=[256,256,1024],s=2)\n","    X = identity_block(X,3,[256,256,1024])\n","    X = identity_block(X,3,[256,256,1024])\n","    X = identity_block(X,3,[256,256,1024])\n","    X = identity_block(X,3,[256,256,1024])\n","    X = identity_block(X,3,[256,256,1024])\n","    # Stage 5\n","    X = convolutional_block(X,f=3,filters=[512,512,2048],s=2)\n","    X = identity_block(X,3,[512,512,2048])\n","    X = identity_block(X,3,[512,512,2048])\n","\n","    # AVGPOOL\n","    X = AveragePooling2D((2,2),name=\"avg_pool\")(X)\n","\n","    # output layer\n","    X = Flatten()(X)\n","    X = Dense(classes, activation='softmax',kernel_initializer = glorot_uniform(seed=0))(X)\n","    \n","    # Create model\n","    model = Model(inputs = X_input, outputs = X, name='ResNet50')\n","\n","    return model"]},{"cell_type":"code","execution_count":19,"metadata":{"id":"x-IxwJPttgvD","executionInfo":{"status":"ok","timestamp":1654339888138,"user_tz":-540,"elapsed":1593,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}}},"outputs":[],"source":["model = ResNet50(input_shape=(60,60,3),classes=11)"]},{"cell_type":"code","source":["#Compile\n","model.compile(optimizer='sgd', loss='sparse_categorical_crossentropy', metrics=['accuracy'])"],"metadata":{"id":"kB90N88jW_0F","executionInfo":{"status":"ok","timestamp":1654339888138,"user_tz":-540,"elapsed":22,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TrNGgfXTDLXn","executionInfo":{"status":"ok","timestamp":1654339890531,"user_tz":-540,"elapsed":2415,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}},"outputId":"101d7995-c406-45a9-8469-cfeb5ed0c484"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"ResNet50\"\n","__________________________________________________________________________________________________\n"," Layer (type)                   Output Shape         Param #     Connected to                     \n","==================================================================================================\n"," input_1 (InputLayer)           [(None, 60, 60, 3)]  0           []                               \n","                                                                                                  \n"," zero_padding2d (ZeroPadding2D)  (None, 66, 66, 3)   0           ['input_1[0][0]']                \n","                                                                                                  \n"," conv1 (Conv2D)                 (None, 30, 30, 64)   9472        ['zero_padding2d[0][0]']         \n","                                                                                                  \n"," bn_conv1 (BatchNormalization)  (None, 30, 30, 64)   256         ['conv1[0][0]']                  \n","                                                                                                  \n"," activation (Activation)        (None, 30, 30, 64)   0           ['bn_conv1[0][0]']               \n","                                                                                                  \n"," max_pooling2d (MaxPooling2D)   (None, 14, 14, 64)   0           ['activation[0][0]']             \n","                                                                                                  \n"," conv2d (Conv2D)                (None, 14, 14, 64)   4160        ['max_pooling2d[0][0]']          \n","                                                                                                  \n"," batch_normalization (BatchNorm  (None, 14, 14, 64)  256         ['conv2d[0][0]']                 \n"," alization)                                                                                       \n","                                                                                                  \n"," activation_1 (Activation)      (None, 14, 14, 64)   0           ['batch_normalization[0][0]']    \n","                                                                                                  \n"," conv2d_1 (Conv2D)              (None, 14, 14, 64)   36928       ['activation_1[0][0]']           \n","                                                                                                  \n"," batch_normalization_1 (BatchNo  (None, 14, 14, 64)  256         ['conv2d_1[0][0]']               \n"," rmalization)                                                                                     \n","                                                                                                  \n"," activation_2 (Activation)      (None, 14, 14, 64)   0           ['batch_normalization_1[0][0]']  \n","                                                                                                  \n"," conv2d_2 (Conv2D)              (None, 14, 14, 256)  16640       ['activation_2[0][0]']           \n","                                                                                                  \n"," conv2d_3 (Conv2D)              (None, 14, 14, 256)  16640       ['max_pooling2d[0][0]']          \n","                                                                                                  \n"," batch_normalization_2 (BatchNo  (None, 14, 14, 256)  1024       ['conv2d_2[0][0]']               \n"," rmalization)                                                                                     \n","                                                                                                  \n"," batch_normalization_3 (BatchNo  (None, 14, 14, 256)  1024       ['conv2d_3[0][0]']               \n"," rmalization)                                                                                     \n","                                                                                                  \n"," add (Add)                      (None, 14, 14, 256)  0           ['batch_normalization_2[0][0]',  \n","                                                                  'batch_normalization_3[0][0]']  \n","                                                                                                  \n"," activation_3 (Activation)      (None, 14, 14, 256)  0           ['add[0][0]']                    \n","                                                                                                  \n"," conv2d_4 (Conv2D)              (None, 14, 14, 64)   16448       ['activation_3[0][0]']           \n","                                                                                                  \n"," batch_normalization_4 (BatchNo  (None, 14, 14, 64)  256         ['conv2d_4[0][0]']               \n"," rmalization)                                                                                     \n","                                                                                                  \n"," activation_4 (Activation)      (None, 14, 14, 64)   0           ['batch_normalization_4[0][0]']  \n","                                                                                                  \n"," conv2d_5 (Conv2D)              (None, 14, 14, 64)   36928       ['activation_4[0][0]']           \n","                                                                                                  \n"," batch_normalization_5 (BatchNo  (None, 14, 14, 64)  256         ['conv2d_5[0][0]']               \n"," rmalization)                                                                                     \n","                                                                                                  \n"," activation_5 (Activation)      (None, 14, 14, 64)   0           ['batch_normalization_5[0][0]']  \n","                                                                                                  \n"," conv2d_6 (Conv2D)              (None, 14, 14, 256)  16640       ['activation_5[0][0]']           \n","                                                                                                  \n"," batch_normalization_6 (BatchNo  (None, 14, 14, 256)  1024       ['conv2d_6[0][0]']               \n"," rmalization)                                                                                     \n","                                                                                                  \n"," add_1 (Add)                    (None, 14, 14, 256)  0           ['batch_normalization_6[0][0]',  \n","                                                                  'activation_3[0][0]']           \n","                                                                                                  \n"," activation_6 (Activation)      (None, 14, 14, 256)  0           ['add_1[0][0]']                  \n","                                                                                                  \n"," conv2d_7 (Conv2D)              (None, 14, 14, 64)   16448       ['activation_6[0][0]']           \n","                                                                                                  \n"," batch_normalization_7 (BatchNo  (None, 14, 14, 64)  256         ['conv2d_7[0][0]']               \n"," rmalization)                                                                                     \n","                                                                                                  \n"," activation_7 (Activation)      (None, 14, 14, 64)   0           ['batch_normalization_7[0][0]']  \n","                                                                                                  \n"," conv2d_8 (Conv2D)              (None, 14, 14, 64)   36928       ['activation_7[0][0]']           \n","                                                                                                  \n"," batch_normalization_8 (BatchNo  (None, 14, 14, 64)  256         ['conv2d_8[0][0]']               \n"," rmalization)                                                                                     \n","                                                                                                  \n"," activation_8 (Activation)      (None, 14, 14, 64)   0           ['batch_normalization_8[0][0]']  \n","                                                                                                  \n"," conv2d_9 (Conv2D)              (None, 14, 14, 256)  16640       ['activation_8[0][0]']           \n","                                                                                                  \n"," batch_normalization_9 (BatchNo  (None, 14, 14, 256)  1024       ['conv2d_9[0][0]']               \n"," rmalization)                                                                                     \n","                                                                                                  \n"," add_2 (Add)                    (None, 14, 14, 256)  0           ['batch_normalization_9[0][0]',  \n","                                                                  'activation_6[0][0]']           \n","                                                                                                  \n"," activation_9 (Activation)      (None, 14, 14, 256)  0           ['add_2[0][0]']                  \n","                                                                                                  \n"," conv2d_10 (Conv2D)             (None, 7, 7, 128)    32896       ['activation_9[0][0]']           \n","                                                                                                  \n"," batch_normalization_10 (BatchN  (None, 7, 7, 128)   512         ['conv2d_10[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_10 (Activation)     (None, 7, 7, 128)    0           ['batch_normalization_10[0][0]'] \n","                                                                                                  \n"," conv2d_11 (Conv2D)             (None, 7, 7, 128)    147584      ['activation_10[0][0]']          \n","                                                                                                  \n"," batch_normalization_11 (BatchN  (None, 7, 7, 128)   512         ['conv2d_11[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_11 (Activation)     (None, 7, 7, 128)    0           ['batch_normalization_11[0][0]'] \n","                                                                                                  \n"," conv2d_12 (Conv2D)             (None, 7, 7, 512)    66048       ['activation_11[0][0]']          \n","                                                                                                  \n"," conv2d_13 (Conv2D)             (None, 7, 7, 512)    131584      ['activation_9[0][0]']           \n","                                                                                                  \n"," batch_normalization_12 (BatchN  (None, 7, 7, 512)   2048        ['conv2d_12[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," batch_normalization_13 (BatchN  (None, 7, 7, 512)   2048        ['conv2d_13[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," add_3 (Add)                    (None, 7, 7, 512)    0           ['batch_normalization_12[0][0]', \n","                                                                  'batch_normalization_13[0][0]'] \n","                                                                                                  \n"," activation_12 (Activation)     (None, 7, 7, 512)    0           ['add_3[0][0]']                  \n","                                                                                                  \n"," conv2d_14 (Conv2D)             (None, 7, 7, 128)    65664       ['activation_12[0][0]']          \n","                                                                                                  \n"," batch_normalization_14 (BatchN  (None, 7, 7, 128)   512         ['conv2d_14[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_13 (Activation)     (None, 7, 7, 128)    0           ['batch_normalization_14[0][0]'] \n","                                                                                                  \n"," conv2d_15 (Conv2D)             (None, 7, 7, 128)    147584      ['activation_13[0][0]']          \n","                                                                                                  \n"," batch_normalization_15 (BatchN  (None, 7, 7, 128)   512         ['conv2d_15[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_14 (Activation)     (None, 7, 7, 128)    0           ['batch_normalization_15[0][0]'] \n","                                                                                                  \n"," conv2d_16 (Conv2D)             (None, 7, 7, 512)    66048       ['activation_14[0][0]']          \n","                                                                                                  \n"," batch_normalization_16 (BatchN  (None, 7, 7, 512)   2048        ['conv2d_16[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," add_4 (Add)                    (None, 7, 7, 512)    0           ['batch_normalization_16[0][0]', \n","                                                                  'activation_12[0][0]']          \n","                                                                                                  \n"," activation_15 (Activation)     (None, 7, 7, 512)    0           ['add_4[0][0]']                  \n","                                                                                                  \n"," conv2d_17 (Conv2D)             (None, 7, 7, 128)    65664       ['activation_15[0][0]']          \n","                                                                                                  \n"," batch_normalization_17 (BatchN  (None, 7, 7, 128)   512         ['conv2d_17[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_16 (Activation)     (None, 7, 7, 128)    0           ['batch_normalization_17[0][0]'] \n","                                                                                                  \n"," conv2d_18 (Conv2D)             (None, 7, 7, 128)    147584      ['activation_16[0][0]']          \n","                                                                                                  \n"," batch_normalization_18 (BatchN  (None, 7, 7, 128)   512         ['conv2d_18[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_17 (Activation)     (None, 7, 7, 128)    0           ['batch_normalization_18[0][0]'] \n","                                                                                                  \n"," conv2d_19 (Conv2D)             (None, 7, 7, 512)    66048       ['activation_17[0][0]']          \n","                                                                                                  \n"," batch_normalization_19 (BatchN  (None, 7, 7, 512)   2048        ['conv2d_19[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," add_5 (Add)                    (None, 7, 7, 512)    0           ['batch_normalization_19[0][0]', \n","                                                                  'activation_15[0][0]']          \n","                                                                                                  \n"," activation_18 (Activation)     (None, 7, 7, 512)    0           ['add_5[0][0]']                  \n","                                                                                                  \n"," conv2d_20 (Conv2D)             (None, 7, 7, 128)    65664       ['activation_18[0][0]']          \n","                                                                                                  \n"," batch_normalization_20 (BatchN  (None, 7, 7, 128)   512         ['conv2d_20[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_19 (Activation)     (None, 7, 7, 128)    0           ['batch_normalization_20[0][0]'] \n","                                                                                                  \n"," conv2d_21 (Conv2D)             (None, 7, 7, 128)    147584      ['activation_19[0][0]']          \n","                                                                                                  \n"," batch_normalization_21 (BatchN  (None, 7, 7, 128)   512         ['conv2d_21[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_20 (Activation)     (None, 7, 7, 128)    0           ['batch_normalization_21[0][0]'] \n","                                                                                                  \n"," conv2d_22 (Conv2D)             (None, 7, 7, 512)    66048       ['activation_20[0][0]']          \n","                                                                                                  \n"," batch_normalization_22 (BatchN  (None, 7, 7, 512)   2048        ['conv2d_22[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," add_6 (Add)                    (None, 7, 7, 512)    0           ['batch_normalization_22[0][0]', \n","                                                                  'activation_18[0][0]']          \n","                                                                                                  \n"," activation_21 (Activation)     (None, 7, 7, 512)    0           ['add_6[0][0]']                  \n","                                                                                                  \n"," conv2d_23 (Conv2D)             (None, 4, 4, 256)    131328      ['activation_21[0][0]']          \n","                                                                                                  \n"," batch_normalization_23 (BatchN  (None, 4, 4, 256)   1024        ['conv2d_23[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_22 (Activation)     (None, 4, 4, 256)    0           ['batch_normalization_23[0][0]'] \n","                                                                                                  \n"," conv2d_24 (Conv2D)             (None, 4, 4, 256)    590080      ['activation_22[0][0]']          \n","                                                                                                  \n"," batch_normalization_24 (BatchN  (None, 4, 4, 256)   1024        ['conv2d_24[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_23 (Activation)     (None, 4, 4, 256)    0           ['batch_normalization_24[0][0]'] \n","                                                                                                  \n"," conv2d_25 (Conv2D)             (None, 4, 4, 1024)   263168      ['activation_23[0][0]']          \n","                                                                                                  \n"," conv2d_26 (Conv2D)             (None, 4, 4, 1024)   525312      ['activation_21[0][0]']          \n","                                                                                                  \n"," batch_normalization_25 (BatchN  (None, 4, 4, 1024)  4096        ['conv2d_25[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," batch_normalization_26 (BatchN  (None, 4, 4, 1024)  4096        ['conv2d_26[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," add_7 (Add)                    (None, 4, 4, 1024)   0           ['batch_normalization_25[0][0]', \n","                                                                  'batch_normalization_26[0][0]'] \n","                                                                                                  \n"," activation_24 (Activation)     (None, 4, 4, 1024)   0           ['add_7[0][0]']                  \n","                                                                                                  \n"," conv2d_27 (Conv2D)             (None, 4, 4, 256)    262400      ['activation_24[0][0]']          \n","                                                                                                  \n"," batch_normalization_27 (BatchN  (None, 4, 4, 256)   1024        ['conv2d_27[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_25 (Activation)     (None, 4, 4, 256)    0           ['batch_normalization_27[0][0]'] \n","                                                                                                  \n"," conv2d_28 (Conv2D)             (None, 4, 4, 256)    590080      ['activation_25[0][0]']          \n","                                                                                                  \n"," batch_normalization_28 (BatchN  (None, 4, 4, 256)   1024        ['conv2d_28[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_26 (Activation)     (None, 4, 4, 256)    0           ['batch_normalization_28[0][0]'] \n","                                                                                                  \n"," conv2d_29 (Conv2D)             (None, 4, 4, 1024)   263168      ['activation_26[0][0]']          \n","                                                                                                  \n"," batch_normalization_29 (BatchN  (None, 4, 4, 1024)  4096        ['conv2d_29[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," add_8 (Add)                    (None, 4, 4, 1024)   0           ['batch_normalization_29[0][0]', \n","                                                                  'activation_24[0][0]']          \n","                                                                                                  \n"," activation_27 (Activation)     (None, 4, 4, 1024)   0           ['add_8[0][0]']                  \n","                                                                                                  \n"," conv2d_30 (Conv2D)             (None, 4, 4, 256)    262400      ['activation_27[0][0]']          \n","                                                                                                  \n"," batch_normalization_30 (BatchN  (None, 4, 4, 256)   1024        ['conv2d_30[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_28 (Activation)     (None, 4, 4, 256)    0           ['batch_normalization_30[0][0]'] \n","                                                                                                  \n"," conv2d_31 (Conv2D)             (None, 4, 4, 256)    590080      ['activation_28[0][0]']          \n","                                                                                                  \n"," batch_normalization_31 (BatchN  (None, 4, 4, 256)   1024        ['conv2d_31[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_29 (Activation)     (None, 4, 4, 256)    0           ['batch_normalization_31[0][0]'] \n","                                                                                                  \n"," conv2d_32 (Conv2D)             (None, 4, 4, 1024)   263168      ['activation_29[0][0]']          \n","                                                                                                  \n"," batch_normalization_32 (BatchN  (None, 4, 4, 1024)  4096        ['conv2d_32[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," add_9 (Add)                    (None, 4, 4, 1024)   0           ['batch_normalization_32[0][0]', \n","                                                                  'activation_27[0][0]']          \n","                                                                                                  \n"," activation_30 (Activation)     (None, 4, 4, 1024)   0           ['add_9[0][0]']                  \n","                                                                                                  \n"," conv2d_33 (Conv2D)             (None, 4, 4, 256)    262400      ['activation_30[0][0]']          \n","                                                                                                  \n"," batch_normalization_33 (BatchN  (None, 4, 4, 256)   1024        ['conv2d_33[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_31 (Activation)     (None, 4, 4, 256)    0           ['batch_normalization_33[0][0]'] \n","                                                                                                  \n"," conv2d_34 (Conv2D)             (None, 4, 4, 256)    590080      ['activation_31[0][0]']          \n","                                                                                                  \n"," batch_normalization_34 (BatchN  (None, 4, 4, 256)   1024        ['conv2d_34[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_32 (Activation)     (None, 4, 4, 256)    0           ['batch_normalization_34[0][0]'] \n","                                                                                                  \n"," conv2d_35 (Conv2D)             (None, 4, 4, 1024)   263168      ['activation_32[0][0]']          \n","                                                                                                  \n"," batch_normalization_35 (BatchN  (None, 4, 4, 1024)  4096        ['conv2d_35[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," add_10 (Add)                   (None, 4, 4, 1024)   0           ['batch_normalization_35[0][0]', \n","                                                                  'activation_30[0][0]']          \n","                                                                                                  \n"," activation_33 (Activation)     (None, 4, 4, 1024)   0           ['add_10[0][0]']                 \n","                                                                                                  \n"," conv2d_36 (Conv2D)             (None, 4, 4, 256)    262400      ['activation_33[0][0]']          \n","                                                                                                  \n"," batch_normalization_36 (BatchN  (None, 4, 4, 256)   1024        ['conv2d_36[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_34 (Activation)     (None, 4, 4, 256)    0           ['batch_normalization_36[0][0]'] \n","                                                                                                  \n"," conv2d_37 (Conv2D)             (None, 4, 4, 256)    590080      ['activation_34[0][0]']          \n","                                                                                                  \n"," batch_normalization_37 (BatchN  (None, 4, 4, 256)   1024        ['conv2d_37[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_35 (Activation)     (None, 4, 4, 256)    0           ['batch_normalization_37[0][0]'] \n","                                                                                                  \n"," conv2d_38 (Conv2D)             (None, 4, 4, 1024)   263168      ['activation_35[0][0]']          \n","                                                                                                  \n"," batch_normalization_38 (BatchN  (None, 4, 4, 1024)  4096        ['conv2d_38[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," add_11 (Add)                   (None, 4, 4, 1024)   0           ['batch_normalization_38[0][0]', \n","                                                                  'activation_33[0][0]']          \n","                                                                                                  \n"," activation_36 (Activation)     (None, 4, 4, 1024)   0           ['add_11[0][0]']                 \n","                                                                                                  \n"," conv2d_39 (Conv2D)             (None, 4, 4, 256)    262400      ['activation_36[0][0]']          \n","                                                                                                  \n"," batch_normalization_39 (BatchN  (None, 4, 4, 256)   1024        ['conv2d_39[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_37 (Activation)     (None, 4, 4, 256)    0           ['batch_normalization_39[0][0]'] \n","                                                                                                  \n"," conv2d_40 (Conv2D)             (None, 4, 4, 256)    590080      ['activation_37[0][0]']          \n","                                                                                                  \n"," batch_normalization_40 (BatchN  (None, 4, 4, 256)   1024        ['conv2d_40[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_38 (Activation)     (None, 4, 4, 256)    0           ['batch_normalization_40[0][0]'] \n","                                                                                                  \n"," conv2d_41 (Conv2D)             (None, 4, 4, 1024)   263168      ['activation_38[0][0]']          \n","                                                                                                  \n"," batch_normalization_41 (BatchN  (None, 4, 4, 1024)  4096        ['conv2d_41[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," add_12 (Add)                   (None, 4, 4, 1024)   0           ['batch_normalization_41[0][0]', \n","                                                                  'activation_36[0][0]']          \n","                                                                                                  \n"," activation_39 (Activation)     (None, 4, 4, 1024)   0           ['add_12[0][0]']                 \n","                                                                                                  \n"," conv2d_42 (Conv2D)             (None, 2, 2, 512)    524800      ['activation_39[0][0]']          \n","                                                                                                  \n"," batch_normalization_42 (BatchN  (None, 2, 2, 512)   2048        ['conv2d_42[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_40 (Activation)     (None, 2, 2, 512)    0           ['batch_normalization_42[0][0]'] \n","                                                                                                  \n"," conv2d_43 (Conv2D)             (None, 2, 2, 512)    2359808     ['activation_40[0][0]']          \n","                                                                                                  \n"," batch_normalization_43 (BatchN  (None, 2, 2, 512)   2048        ['conv2d_43[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_41 (Activation)     (None, 2, 2, 512)    0           ['batch_normalization_43[0][0]'] \n","                                                                                                  \n"," conv2d_44 (Conv2D)             (None, 2, 2, 2048)   1050624     ['activation_41[0][0]']          \n","                                                                                                  \n"," conv2d_45 (Conv2D)             (None, 2, 2, 2048)   2099200     ['activation_39[0][0]']          \n","                                                                                                  \n"," batch_normalization_44 (BatchN  (None, 2, 2, 2048)  8192        ['conv2d_44[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," batch_normalization_45 (BatchN  (None, 2, 2, 2048)  8192        ['conv2d_45[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," add_13 (Add)                   (None, 2, 2, 2048)   0           ['batch_normalization_44[0][0]', \n","                                                                  'batch_normalization_45[0][0]'] \n","                                                                                                  \n"," activation_42 (Activation)     (None, 2, 2, 2048)   0           ['add_13[0][0]']                 \n","                                                                                                  \n"," conv2d_46 (Conv2D)             (None, 2, 2, 512)    1049088     ['activation_42[0][0]']          \n","                                                                                                  \n"," batch_normalization_46 (BatchN  (None, 2, 2, 512)   2048        ['conv2d_46[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_43 (Activation)     (None, 2, 2, 512)    0           ['batch_normalization_46[0][0]'] \n","                                                                                                  \n"," conv2d_47 (Conv2D)             (None, 2, 2, 512)    2359808     ['activation_43[0][0]']          \n","                                                                                                  \n"," batch_normalization_47 (BatchN  (None, 2, 2, 512)   2048        ['conv2d_47[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_44 (Activation)     (None, 2, 2, 512)    0           ['batch_normalization_47[0][0]'] \n","                                                                                                  \n"," conv2d_48 (Conv2D)             (None, 2, 2, 2048)   1050624     ['activation_44[0][0]']          \n","                                                                                                  \n"," batch_normalization_48 (BatchN  (None, 2, 2, 2048)  8192        ['conv2d_48[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," add_14 (Add)                   (None, 2, 2, 2048)   0           ['batch_normalization_48[0][0]', \n","                                                                  'activation_42[0][0]']          \n","                                                                                                  \n"," activation_45 (Activation)     (None, 2, 2, 2048)   0           ['add_14[0][0]']                 \n","                                                                                                  \n"," conv2d_49 (Conv2D)             (None, 2, 2, 512)    1049088     ['activation_45[0][0]']          \n","                                                                                                  \n"," batch_normalization_49 (BatchN  (None, 2, 2, 512)   2048        ['conv2d_49[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_46 (Activation)     (None, 2, 2, 512)    0           ['batch_normalization_49[0][0]'] \n","                                                                                                  \n"," conv2d_50 (Conv2D)             (None, 2, 2, 512)    2359808     ['activation_46[0][0]']          \n","                                                                                                  \n"," batch_normalization_50 (BatchN  (None, 2, 2, 512)   2048        ['conv2d_50[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," activation_47 (Activation)     (None, 2, 2, 512)    0           ['batch_normalization_50[0][0]'] \n","                                                                                                  \n"," conv2d_51 (Conv2D)             (None, 2, 2, 2048)   1050624     ['activation_47[0][0]']          \n","                                                                                                  \n"," batch_normalization_51 (BatchN  (None, 2, 2, 2048)  8192        ['conv2d_51[0][0]']              \n"," ormalization)                                                                                    \n","                                                                                                  \n"," add_15 (Add)                   (None, 2, 2, 2048)   0           ['batch_normalization_51[0][0]', \n","                                                                  'activation_45[0][0]']          \n","                                                                                                  \n"," activation_48 (Activation)     (None, 2, 2, 2048)   0           ['add_15[0][0]']                 \n","                                                                                                  \n"," avg_pool (AveragePooling2D)    (None, 1, 1, 2048)   0           ['activation_48[0][0]']          \n","                                                                                                  \n"," flatten (Flatten)              (None, 2048)         0           ['avg_pool[0][0]']               \n","                                                                                                  \n"," dense (Dense)                  (None, 11)           22539       ['flatten[0][0]']                \n","                                                                                                  \n","==================================================================================================\n","Total params: 23,610,251\n","Trainable params: 23,557,131\n","Non-trainable params: 53,120\n","__________________________________________________________________________________________________\n"]}]},{"cell_type":"code","source":["#fit the training set\n","model.fit(X_train, y_train, epochs = 20, batch_size = BATCHSIZE, validation_data = (X_test, y_test), callbacks=[early_stop])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JXml7SjoXD5s","executionInfo":{"status":"ok","timestamp":1654343277663,"user_tz":-540,"elapsed":3387151,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}},"outputId":"e18a3ea3-8b4e-4419-c43b-4797aa181e35"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/20\n","43/43 [==============================] - 177s 4s/step - loss: 3.9100 - accuracy: 0.1659 - val_loss: 2.5736 - val_accuracy: 0.0976\n","Epoch 2/20\n","43/43 [==============================] - 168s 4s/step - loss: 2.8989 - accuracy: 0.3420 - val_loss: 2.5304 - val_accuracy: 0.0803\n","Epoch 3/20\n","43/43 [==============================] - 166s 4s/step - loss: 2.2846 - accuracy: 0.4054 - val_loss: 2.4985 - val_accuracy: 0.0889\n","Epoch 4/20\n","43/43 [==============================] - 169s 4s/step - loss: 1.7152 - accuracy: 0.5126 - val_loss: 2.6535 - val_accuracy: 0.1388\n","Epoch 5/20\n","43/43 [==============================] - 168s 4s/step - loss: 1.3718 - accuracy: 0.5862 - val_loss: 2.4053 - val_accuracy: 0.1540\n","Epoch 6/20\n","43/43 [==============================] - 168s 4s/step - loss: 1.2545 - accuracy: 0.6067 - val_loss: 1.9709 - val_accuracy: 0.2842\n","Epoch 7/20\n","43/43 [==============================] - 169s 4s/step - loss: 0.8598 - accuracy: 0.7307 - val_loss: 1.5973 - val_accuracy: 0.4382\n","Epoch 8/20\n","43/43 [==============================] - 166s 4s/step - loss: 0.6843 - accuracy: 0.7735 - val_loss: 1.3226 - val_accuracy: 0.5098\n","Epoch 9/20\n","43/43 [==============================] - 168s 4s/step - loss: 0.5131 - accuracy: 0.8313 - val_loss: 1.1377 - val_accuracy: 0.6443\n","Epoch 10/20\n","43/43 [==============================] - 168s 4s/step - loss: 0.5083 - accuracy: 0.8276 - val_loss: 0.8353 - val_accuracy: 0.7440\n","Epoch 11/20\n","43/43 [==============================] - 169s 4s/step - loss: 0.3602 - accuracy: 0.8807 - val_loss: 1.0933 - val_accuracy: 0.6703\n","Epoch 12/20\n","43/43 [==============================] - 166s 4s/step - loss: 0.3121 - accuracy: 0.9068 - val_loss: 0.7069 - val_accuracy: 0.7701\n","Epoch 13/20\n","43/43 [==============================] - 166s 4s/step - loss: 0.2387 - accuracy: 0.9310 - val_loss: 0.6134 - val_accuracy: 0.8026\n","Epoch 14/20\n","43/43 [==============================] - 169s 4s/step - loss: 0.1933 - accuracy: 0.9376 - val_loss: 0.6096 - val_accuracy: 0.8330\n","Epoch 15/20\n","43/43 [==============================] - 167s 4s/step - loss: 0.1443 - accuracy: 0.9581 - val_loss: 0.5916 - val_accuracy: 0.8416\n","Epoch 16/20\n","43/43 [==============================] - 167s 4s/step - loss: 0.1691 - accuracy: 0.9571 - val_loss: 0.6187 - val_accuracy: 0.8351\n","Epoch 17/20\n","43/43 [==============================] - 167s 4s/step - loss: 0.1144 - accuracy: 0.9664 - val_loss: 0.5143 - val_accuracy: 0.8612\n","Epoch 18/20\n","43/43 [==============================] - 166s 4s/step - loss: 0.1207 - accuracy: 0.9655 - val_loss: 0.4874 - val_accuracy: 0.8742\n","Epoch 19/20\n","43/43 [==============================] - 167s 4s/step - loss: 0.1091 - accuracy: 0.9646 - val_loss: 0.4257 - val_accuracy: 0.8764\n","Epoch 20/20\n","43/43 [==============================] - 168s 4s/step - loss: 0.0877 - accuracy: 0.9720 - val_loss: 0.5612 - val_accuracy: 0.8612\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f2bd02a0190>"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","source":["#Result"],"metadata":{"id":"45lGGnV5b5xA"}},{"cell_type":"code","execution_count":23,"metadata":{"id":"BVQlZICktiGD","executionInfo":{"status":"ok","timestamp":1654343277664,"user_tz":-540,"elapsed":21,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}},"colab":{"base_uri":"https://localhost:8080/","height":694},"outputId":"741bd919-6d38-4d73-f819-602524b37acd"},"outputs":[{"output_type":"stream","name":"stdout","text":["The model metrics are\n"]},{"output_type":"execute_result","data":{"text/plain":["        loss  accuracy  val_loss  val_accuracy\n","0   3.909972  0.165890  2.573566      0.097614\n","1   2.898865  0.342032  2.530389      0.080260\n","2   2.284615  0.405405  2.498482      0.088937\n","3   1.715162  0.512582  2.653522      0.138829\n","4   1.371838  0.586207  2.405268      0.154013\n","5   1.254511  0.606710  1.970913      0.284165\n","6   0.859755  0.730662  1.597265      0.438178\n","7   0.684287  0.773532  1.322639      0.509761\n","8   0.513097  0.831314  1.137747      0.644252\n","9   0.508290  0.827586  0.835285      0.744035\n","10  0.360152  0.880708  1.093341      0.670282\n","11  0.312087  0.906803  0.706924      0.770065\n","12  0.238668  0.931035  0.613352      0.802603\n","13  0.193277  0.937558  0.609586      0.832972\n","14  0.144316  0.958062  0.591644      0.841649\n","15  0.169084  0.957130  0.618695      0.835141\n","16  0.114383  0.966449  0.514329      0.861171\n","17  0.120731  0.965517  0.487351      0.874187\n","18  0.109134  0.964585  0.425737      0.876356\n","19  0.087655  0.972041  0.561226      0.861171"],"text/html":["\n","  <div id=\"df-ee05b86b-65b6-4451-b0c6-0c3e6cc7d0a8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>loss</th>\n","      <th>accuracy</th>\n","      <th>val_loss</th>\n","      <th>val_accuracy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3.909972</td>\n","      <td>0.165890</td>\n","      <td>2.573566</td>\n","      <td>0.097614</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2.898865</td>\n","      <td>0.342032</td>\n","      <td>2.530389</td>\n","      <td>0.080260</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2.284615</td>\n","      <td>0.405405</td>\n","      <td>2.498482</td>\n","      <td>0.088937</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.715162</td>\n","      <td>0.512582</td>\n","      <td>2.653522</td>\n","      <td>0.138829</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1.371838</td>\n","      <td>0.586207</td>\n","      <td>2.405268</td>\n","      <td>0.154013</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1.254511</td>\n","      <td>0.606710</td>\n","      <td>1.970913</td>\n","      <td>0.284165</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0.859755</td>\n","      <td>0.730662</td>\n","      <td>1.597265</td>\n","      <td>0.438178</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.684287</td>\n","      <td>0.773532</td>\n","      <td>1.322639</td>\n","      <td>0.509761</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.513097</td>\n","      <td>0.831314</td>\n","      <td>1.137747</td>\n","      <td>0.644252</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.508290</td>\n","      <td>0.827586</td>\n","      <td>0.835285</td>\n","      <td>0.744035</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0.360152</td>\n","      <td>0.880708</td>\n","      <td>1.093341</td>\n","      <td>0.670282</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0.312087</td>\n","      <td>0.906803</td>\n","      <td>0.706924</td>\n","      <td>0.770065</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>0.238668</td>\n","      <td>0.931035</td>\n","      <td>0.613352</td>\n","      <td>0.802603</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>0.193277</td>\n","      <td>0.937558</td>\n","      <td>0.609586</td>\n","      <td>0.832972</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>0.144316</td>\n","      <td>0.958062</td>\n","      <td>0.591644</td>\n","      <td>0.841649</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.169084</td>\n","      <td>0.957130</td>\n","      <td>0.618695</td>\n","      <td>0.835141</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.114383</td>\n","      <td>0.966449</td>\n","      <td>0.514329</td>\n","      <td>0.861171</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0.120731</td>\n","      <td>0.965517</td>\n","      <td>0.487351</td>\n","      <td>0.874187</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>0.109134</td>\n","      <td>0.964585</td>\n","      <td>0.425737</td>\n","      <td>0.876356</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.087655</td>\n","      <td>0.972041</td>\n","      <td>0.561226</td>\n","      <td>0.861171</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee05b86b-65b6-4451-b0c6-0c3e6cc7d0a8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ee05b86b-65b6-4451-b0c6-0c3e6cc7d0a8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ee05b86b-65b6-4451-b0c6-0c3e6cc7d0a8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":23}],"source":["#Model metrics\n","metrics = pd.DataFrame(model.history.history)\n","print(\"The model metrics are\")\n","metrics"]},{"cell_type":"code","execution_count":24,"metadata":{"id":"gjmgz20Btjvs","executionInfo":{"status":"ok","timestamp":1654343278225,"user_tz":-540,"elapsed":576,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}},"colab":{"base_uri":"https://localhost:8080/","height":266},"outputId":"e31e58e3-a1cd-4a28-ad78-c2ef41b89089"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["#저장된 accuracy 그래프로 출력\n","metrics[['accuracy','val_accuracy']].plot()\n","plt.show()"]},{"cell_type":"code","execution_count":25,"metadata":{"id":"V-qG0qDVtlO4","executionInfo":{"status":"ok","timestamp":1654343278226,"user_tz":-540,"elapsed":10,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}},"colab":{"base_uri":"https://localhost:8080/","height":265},"outputId":"0c3f0cb9-ad2e-45aa-b6b4-08666b948503"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["#저장된 loss 그래프로 출력\n","metrics[['loss','val_loss']].plot()\n","plt.show()"]},{"cell_type":"code","source":["#Model evaluation\n","model.evaluate(X_test,y_test)"],"metadata":{"id":"2ZJ80Y-GPz3x","executionInfo":{"status":"ok","timestamp":1654343288384,"user_tz":-540,"elapsed":10166,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"c3312809-ac51-4bc8-bca1-9aed1a3b1bce"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["15/15 [==============================] - 6s 392ms/step - loss: 0.5612 - accuracy: 0.8612\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.5612260103225708, 0.8611713647842407]"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["y_predictions=model.predict(X_test)\n","predictions=y_predictions.argmax(axis=1)"],"metadata":{"id":"Tj3V3Z_lP1fW","executionInfo":{"status":"ok","timestamp":1654343295061,"user_tz":-540,"elapsed":6696,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["#Report\n","from sklearn.metrics import classification_report, confusion_matrix\n","print(classification_report(y_test,predictions))"],"metadata":{"id":"gueqBuqMP2qF","executionInfo":{"status":"ok","timestamp":1654343295062,"user_tz":-540,"elapsed":6,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"cffc683e-2cb3-477e-f2b9-e165977344e7"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.95      1.00      0.98        21\n","           1       0.83      0.93      0.87        41\n","           2       0.74      0.85      0.79        40\n","           3       0.89      0.76      0.82        41\n","           4       0.88      0.85      0.86        41\n","           5       0.91      0.95      0.93        42\n","           6       0.82      0.88      0.85        41\n","           7       0.88      0.71      0.78        41\n","           8       0.76      0.95      0.85        41\n","           9       0.85      0.85      0.85        41\n","          10       1.00      0.83      0.91        71\n","\n","    accuracy                           0.86       461\n","   macro avg       0.86      0.87      0.86       461\n","weighted avg       0.87      0.86      0.86       461\n","\n"]}]},{"cell_type":"code","source":["#Confusion matrix로 표시\n","plt.figure(figsize=(12,12))\n","sns.heatmap(confusion_matrix(y_test,predictions))\n","plt.show()"],"metadata":{"id":"e0BDbJBMP4Vc","executionInfo":{"status":"ok","timestamp":1654343295577,"user_tz":-540,"elapsed":519,"user":{"displayName":"­김여진(엘텍공과대학 인공지능ㆍ소프트웨어학부)","userId":"09354366800005724105"}},"colab":{"base_uri":"https://localhost:8080/","height":675},"outputId":"0ce4bf33-4cb8-4792-bb33-bd8b9fcf240b"},"execution_count":29,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 864x864 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]}],"metadata":{"colab":{"collapsed_sections":[],"name":"ResNet 데이터추가 patience 3 batch 25의 사본","provenance":[],"mount_file_id":"1xzFa36lBBbqdjqvCW3odFs_hOpMlGuu3","authorship_tag":"ABX9TyOke9CoElayBCx7WXq7Y4Tt"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}